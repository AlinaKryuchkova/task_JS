-- Задачи для live-coding

1. Проверить, является ли заданная строка палиндромом. Сейчас популярно усложнять данную задачу. Добавим условие, которое будет игнорировать символы пробела, знаков препинания и пр. Также будем игнорировать регистр.
2. Напишите функцию, которая принимает строку и возвращает её в обратном порядке
3. Напишите функцию, которая принимает массив и возвращает массив уникальных значений.
4. Напишите функцию, которая выводит числа от 1 до 100. Для кратных 3 выведите "Fizz", для кратных 5 — "Buzz", а для кратных одновременно и 3, и 5 — "FizzBuzz".
5. Напишите функцию, которая принимает массив чисел и возвращает второй по величине элемент.
6. Напишите функцию, которая определяет, являются ли две строки анаграммами (содержат одинаковые буквы в разном порядке).
7. Напишите функцию, которая принимает массив чисел и возвращает их сумму
8. Напишите функцию, которая принимает массив и возвращает объект с частотой каждого элемента
9. Напишите функцию, которая принимает массив и возвращает true, если в массиве есть дубликаты, и false в противном случае.

-- Вопросы на синтаксис

### **Переменные и типы данных**

1. Чем отличаются `var`, `let` и `const`?
2. Какое значение будет у переменной, если её объявить, но не инициализировать?
3. Как проверить тип данных переменной?
4. Что такое `undefined` и `null`, и чем они отличаются?
5. Как создать объект и массив? Приведите пример.
6. Что такое "область видимости" (scope) переменной?
7. Что такое "хостинг" (hoisting) переменных? Как он работает для `var`, `let` и `const`?
8. Какие существуют примитивные типы данных в JavaScript?
9. Что такое ссылочные типы данных? Как они отличаются от примитивных?
10. Как проверить, является ли значение массивом?
11. Чем отличаются "неопределённое" значение (`undefined`) и "пустое значение" (`null`)?
12. Что происходит, если попытаться изменить значение, объявленное через `const`?
13. Как работает динамическая типизация в JavaScript?

### **Условные конструкции**

1. Чем отличаются `if...else` и тернарный оператор? Приведите пример использования тернарного оператора.
2. Какие значения в JavaScript считаются ложными (`falsy`)?
3. Какие значения считаются "ложными" (`falsy`) в JavaScript?
4. Как работает оператор `switch`? В каких случаях его лучше использовать вместо `if...else`?
5. Чем отличается `if` с оператором `==` от `===`?
6. Что делает оператор логического "или" (`||`)? Какое значение он возвращает?
7. Как работает оператор логического "и" (`&&`)?
8. Как работает оператор `??` (Nullish Coalescing)?
9. Напишите пример кода, где используется конструкция `if` внутри `else`.
10. Как можно вложить несколько условий для проверки сложных случаев?

### **Циклы**

1. Чем отличается `for` от `for...of` и `for...in`?
2. Можно ли выйти из цикла `forEach` с помощью `break`? Если нет, то как это можно обойти?
3. Какие существуют циклы в JavaScript?
4. Как работает цикл `for`? Напишите пример.
5. Как работает цикл `while`? В чём его отличие от `for`?
6. Что делает цикл `do...while`? Как он отличается от других циклов?
7. Что произойдёт, если в цикле `while` не указать условие выхода?
8. Как досрочно завершить цикл? (Подсказка: `break`)
9. Как пропустить текущую итерацию в цикле? (Подсказка: `continue`)
10. Чем отличаются `for...of` и `for...in`? Когда какой лучше использовать?
11. Как можно перебрать массив с помощью цикла? Напишите пример.
12. Напишите цикл, который создаёт массив чисел от 1 до 10.

### **Функции**

1. Чем отличается обычная функция от стрелочной? Приведите пример.
2. Что такое параметр по умолчанию в функции?
3. Как передать неопределённое количество аргументов в функцию?
4. Чем отличается `function declaration` от `function expression`?
5. Что такое стрелочные функции? Чем они отличаются от обычных?
6. Как работает ключевое слово `return` в функциях?
7. Что произойдёт, если функция ничего не возвращает?

### **Массивы**

1. Как добавить элемент в конец массива? Как удалить первый элемент?
2. Что делают методы `.map()` и `.filter()`? Приведите пример их использования.
3. Чем отличаются `.forEach()` и `.map()`?
4. Как создать массив в JavaScript?
5. Как получить длину массива?
6. Как добавить элемент в конец массива? (Подсказка: `push`)
7. Как удалить элемент из конца массива? (Подсказка: `pop`)
8. Как добавить элемент в начало массива? (Подсказка: `unshift`)
9. Как удалить элемент из начала массива? (Подсказка: `shift`)
10. Как найти индекс элемента в массиве? (Подсказка: `indexOf`)
11. Что делает метод `.slice()`? Как он отличается от `.splice()`?
12. Чем отличается `map()` от `forEach()`?
13. Как отсортировать массив чисел по возрастанию?

### **Объекты**

1. Как добавить новое свойство к объекту?
2. Как перебрать все свойства объекта? Чем отличается `for...in` от `Object.keys()`
3. Как можно скопировать объект? В чём разница между поверхностным и глубоким копированием?
4. Как добавить новое свойство в объект?
5. Как удалить свойство из объекта?
6. Что делает метод `Object.keys()`?
7. Как можно скопировать объект? Чем отличается поверхностное и глубокое копирование?
8. Как перебрать все свойства объекта?
9. Напишите пример объекта с вложенными объектами.
10. Как проверить, есть ли свойство в объекте? (Подсказка: `in`)
11. Как объединить два объекта в один? (Подсказка: `Object.assign()` или `...spread`)
12